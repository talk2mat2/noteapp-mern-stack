{"version":3,"sources":["../node_modules/classnames/index.js","views/theme/colors/Colors.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","ThemeColor","className","children","price","xs","sm","md","xl","style","height","textAlign","paddingTop","color","Colors","formResponse","setFomresponse","React","useState","premium","business","editVisible","setEditsVisible","isloading","setIsLoading","pageData","setPageData","useEffect","axios","get","then","res","console","log","data","userData","catch","err","type","value","onChange","e","target","placeholder","onClick","values","alert","post","active"],"mappings":"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","file":"static/js/19.eefb58a0.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import PropTypes from 'prop-types'\nimport React, { useEffect, useState, createRef } from 'react'\nimport classNames from 'classnames'\nimport { CRow, CCol, CCard, CCardHeader, CCardBody, CButton,CInputGroupText,CInputGroup,CFormCheck,CFormInput,CSpinner  } from '@coreui/react'\nimport axios from 'axios'\nimport { DocsExample } from 'src/components'\n\n\n\n\nconst ThemeColor = ({ className, children ,price}) => {\n  const classes = classNames(className, 'theme-color w-75 rounded mb-3')\n  return (\n    <CCol xs={12} sm={6} md={4} xl={3} className=\"mb-4\">\n      <div className={classes} style={{height:\"160px\",textAlign:\"center\" ,paddingTop:\"20%\"}}><h3 style={{color:\"#fff\"}}>{price}</h3></div>\n      {children}\n\n    </CCol>\n  )\n}\n\nThemeColor.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  price:PropTypes.string\n}\n\nconst Colors = () => {\nconst [formResponse,setFomresponse] =React.useState({premium:\"\",business:\"\"})\nconst [editVisible,setEditsVisible] = React.useState(false)\nconst [isloading,setIsLoading]=React.useState(false)\nconst [pageData,setPageData]=React.useState({premium:0,business:0})\n\n\nconst showEdits=()=>{\n  setEditsVisible(!editVisible)\n}\n\nconst setPlans= (values) => {\nif(!formResponse.premium||!formResponse.business){\n  return alert(\"both field are required\")\n}\n  setIsLoading(true);\n// console.log(process.env.REACT_APP_API_URL)\n  axios\n    .post(`http://127.0.0.1:8080/plans/setplans`, formResponse)\n    .then((res) => {\n      setIsLoading(false);\n      setPageData({...pageData,...res.data.userData})\n      setEditsVisible(false)\n    })\n    .catch((err) => {\n      setIsLoading(false);\n      console.log(err)\n    \n    });\n};\nconst getPlans= (values) => {\n\n  setIsLoading(true);\n// console.log(process.env.REACT_APP_API_URL)\n  axios\n    .get(`http://127.0.0.1:8080/plans/getplans`)\n    .then((res) => {\n      setIsLoading(false);\n      console.log(res.data);\n      setPageData({...pageData,...res.data.userData})\n    \n    })\n    .catch((err) => {\n      setIsLoading(false);\n      console.log(err)\n    \n    });\n};\nReact.useEffect(()=>{\n  getPlans()\n},[])\n  return (\n    <>  {editVisible&&<CCol xs={12}>\n    <CCard className=\"mb-4\">\n      <CCardHeader>\n        <strong>Edit</strong> <small>---set price of differewnt plan</small>\n      </CCardHeader>\n      <CCardBody>\n      <div className='d-flex justify-content-center'> {isloading&& <CSpinner color=\"primary\" />}</div>\n        <DocsExample>\n          <CInputGroup className=\"mb-3\">\n            <CInputGroupText>\n              <CFormCheck\n                type=\"checkbox\"\n                value=\"\"\n                aria-label=\"Checkbox for following text input\"\n              />\n            </CInputGroupText>\n            <CFormInput type='number' onChange={e=>setFomresponse({...formResponse,premium:e.target.value})} placeholder='Premium Price Rate' value={formResponse.premium} aria-label=\"Text input with checkbox\" />\n          </CInputGroup>\n          <CInputGroup>\n            <CInputGroupText>\n              <CFormCheck\n                type=\"radio\"\n                value=\"\"\n                aria-label=\"Radio button for following text input\"\n              />\n            </CInputGroupText>\n            <CFormInput type='number' onChange={e=>setFomresponse({...formResponse,business:e.target.value})}  placeholder='Business Price Rate' aria-label=\"Text input with radio button\" />\n          </CInputGroup>\n        </DocsExample>\n        <CButton onClick={setPlans} color=\"primary\" active=\"true\">\n        Update\n        </CButton>\n      </CCardBody>\n    </CCard>\n    \n  </CCol>}\n      <CCard className=\"mb-4\">\n        <CCardHeader>Plan Rates-(NAIRA)</CCardHeader>\n        <CCardBody>\n          <CRow>\n            <ThemeColor price='Free' className=\"bg-primary\">\n              <h6>Basic</h6>\n            </ThemeColor>\n            <ThemeColor price={pageData.premium} className=\"bg-secondary\">\n              <h6>Premium</h6>\n            </ThemeColor>\n            <ThemeColor price={pageData.business} className=\"bg-success\">\n              <h6>Business</h6>\n            </ThemeColor>\n           <div className='col-4'>\n           <CButton onClick={showEdits} color=\"primary\" active=\"true\">\n              Set Rate\n            </CButton>\n           </div>\n          </CRow>\n        </CCardBody>\n      </CCard>\n\n\n    \n    </>\n  )\n}\n\nexport default Colors\n"],"sourceRoot":""}