{"version":3,"sources":["views/base/accordion/Accordion.js"],"names":["Accordion","fomResponse","setFomresponse","React","useState","title","body","isLoading","setIsLoading","privacyData","setPrivacydata","handleFomresponse","e","name","target","value","handleDelete","id","axios","get","process","then","res","gettPrivacy","catch","err","alert","console","log","values","data","userData","useEffect","length","map","item","index","xs","className","onClick","bind","_id","style","float","color","cursor","href","htmlFor","type","onChange","placeholder","rows","post","active"],"mappings":"6KAAA,uEAiKeA,UAhJG,KAChB,MAAOC,EAAaC,GAAkBC,IAAMC,SAAS,CACnDC,MAAO,GACPC,KAAM,MAEDC,EAAWC,GAAgBL,IAAMC,UAAS,IAC1CK,EAAaC,GAAkBP,IAAMC,SAAS,IAE/CO,EAAoB,CAACC,EAAGC,KAC5BX,EAAe,IAAKD,EAAa,CAACY,GAAOD,EAAEE,OAAOC,SA2B9CC,EAAgBC,IAEpBT,GAAa,GAEbU,IACGC,IADH,UACUC,wBADV,kCACiEH,IAC9DI,MAAMC,IACLd,GAAa,GAEbe,OAEDC,OAAOC,IACNC,MAAM,iBACNlB,GAAa,GACbmB,QAAQC,IAAIH,OAGZF,EAAeM,IACnBrB,GAAa,GAEbU,IACGC,IADH,UACUC,wBADV,aAEGC,MAAMC,IACLd,GAAa,GAEbE,EAAeY,EAAIQ,KAAKC,aAEzBP,OAAOC,IACNC,MAAM,iBACNlB,GAAa,GACbmB,QAAQC,IAAIH,OA6BlB,OAHAtB,IAAM6B,WAAU,KACdT,MACC,IAED,eAAC,KAAD,WACE,gDA1BAd,EAAYwB,OAAS,GACrBxB,EAAYyB,KAAI,CAACC,EAAMC,IACrB,cAAC,IAAD,CAAqBC,GAAI,GAAzB,SACE,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,iCAASH,EAAK9B,QAAgB,IAC9B,mBACEkC,QAASvB,EAAawB,UAAK,EAAML,EAAKM,KACtCC,MAAO,CAAEC,MAAO,QAASC,MAAO,SAAUC,OAAQ,WAFpD,uBAOF,cAAC,IAAD,UACE,oBAAGP,UAAU,6BAAb,UAA2CH,EAAK7B,KAAhD,aAZK6B,EAAKM,OA0BlB,eAAC,IAAD,CAAMJ,GAAI,GAAV,UACE,sBAAKC,UAAU,gCAAf,UACG,IACA/B,GAAa,cAAC,KAAD,CAAUqC,MAAM,eAEhC,cAAC,IAAD,CAAMP,GAAI,GAAV,SACE,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACE,cAAC,IAAD,UACE,uDAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAaQ,KAAK,qBAAlB,SACE,eAAC,IAAD,WACE,sBAAKR,UAAU,OAAf,UACE,cAAC,IAAD,CAAYS,QAAQ,2BAApB,mBACA,cAAC,IAAD,CACEC,KAAK,QACLjC,MAAOd,EAAYI,MACnB4C,SAAWrC,GAAMD,EAAkBC,EAAG,SACtCK,GAAG,2BACHiC,YAAY,wBAGhB,sBAAKZ,UAAU,OAAf,UACE,cAAC,IAAD,CAAYS,QAAQ,8BAApB,kBACA,cAAC,IAAD,CACEhC,MAAOd,EAAYK,KACnB2C,SAAWrC,GAAMD,EAAkBC,EAAG,QACtCK,GAAG,8BACHkC,KAAK,cAKb,cAAC,IAAD,CAASZ,QAzHDV,GACb5B,EAAYI,MAGZJ,EAAYK,MAGjBE,GAAa,QAEbU,IACGkC,KADH,UACWhC,wBADX,YACoDnB,GACjDoB,MAAMC,IACLd,GAAa,GACbkB,MAAM,WACNxB,EAAe,CAAEG,MAAO,GAAIC,KAAM,KAClCG,EAAYwB,QAAUvB,EAAe,IAAID,EAAa,IAAKa,EAAIQ,KAAKC,aACnEtB,EAAYwB,QAAUvB,EAAe,CAAC,IAAKY,EAAIQ,KAAKC,eAEtDP,OAAOC,IACNC,MAAM,iBACNlB,GAAa,GACbmB,QAAQC,IAAIH,OAhBPC,MAAM,yBAHNA,MAAM,qBAuHyBkB,MAAM,UAAUS,OAAO,OAArD","file":"static/js/20.2525428e.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CButton,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CSpinner,\n  CFormTextarea,\n} from '@coreui/react'\nimport { DocsCallout, DocsExample } from 'src/components'\n\nconst Accordion = () => {\n  const [fomResponse, setFomresponse] = React.useState({\n    title: '',\n    body: '',\n  })\n  const [isLoading, setIsLoading] = React.useState(false)\n  const [privacyData, setPrivacydata] = React.useState([])\n\n  const handleFomresponse = (e, name) => {\n    setFomresponse({ ...fomResponse, [name]: e.target.value })\n  }\n\n  const setPrivacy = (values) => {\n    if (!fomResponse.title) {\n      return alert('No Title provided')\n    }\n    if (!fomResponse.body) {\n      return alert('body can not be empty')\n    }\n    setIsLoading(true)\n    // console.log(process.env.REACT_APP_API_URL)\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/privacy`, fomResponse)\n      .then((res) => {\n        setIsLoading(false)\n        alert('updated')\n        setFomresponse({ title: '', body: '' })\n        privacyData.length && setPrivacydata([...privacyData, { ...res.data.userData }])\n        !privacyData.length && setPrivacydata([{ ...res.data.userData }])\n      })\n      .catch((err) => {\n        alert('error occured')\n        setIsLoading(false)\n        console.log(err)\n      })\n  }\n  const handleDelete = (id) => {\n    //deletePrivacy\n    setIsLoading(true)\n    // console.log(process.env.REACT_APP_API_URL)\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/privacy/deletePrivacy/${id}`)\n      .then((res) => {\n        setIsLoading(false)\n\n        gettPrivacy()\n      })\n      .catch((err) => {\n        alert('error occured')\n        setIsLoading(false)\n        console.log(err)\n      })\n  }\n  const gettPrivacy = (values) => {\n    setIsLoading(true)\n    // console.log(process.env.REACT_APP_API_URL)\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/privacy`)\n      .then((res) => {\n        setIsLoading(false)\n\n        setPrivacydata(res.data.userData)\n      })\n      .catch((err) => {\n        alert('error occured')\n        setIsLoading(false)\n        console.log(err)\n      })\n  }\n  const mapPrivacy = () => {\n    return (\n      privacyData.length > 0 &&\n      privacyData.map((item, index) => (\n        <CCol key={item._id} xs={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>{item.title}</strong>{' '}\n              <p\n                onClick={handleDelete.bind(this, item._id)}\n                style={{ float: 'right', color: 'tomato', cursor: 'pointer' }}\n              >\n                Delete\n              </p>\n            </CCardHeader>\n            <CCardBody>\n              <p className=\"text-medium-emphasis small\">{item.body}.</p>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      ))\n    )\n  }\n  React.useEffect(() => {\n    gettPrivacy()\n  }, [])\n  return (\n    <CRow>\n      <h3>Privacy Policy</h3>\n      {mapPrivacy()}\n      <CCol xs={12}>\n        <div className=\"d-flex justify-content-center\">\n          {' '}\n          {isLoading && <CSpinner color=\"primary\" />}\n        </div>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>Add New Content</strong>\n            </CCardHeader>\n            <CCardBody>\n              <DocsExample href=\"forms/form-control\">\n                <CForm>\n                  <div className=\"mb-3\">\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">Title</CFormLabel>\n                    <CFormInput\n                      type=\"email\"\n                      value={fomResponse.title}\n                      onChange={(e) => handleFomresponse(e, 'title')}\n                      id=\"exampleFormControlInput1\"\n                      placeholder=\"name@example.com\"\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <CFormLabel htmlFor=\"exampleFormControlTextarea1\">Body</CFormLabel>\n                    <CFormTextarea\n                      value={fomResponse.body}\n                      onChange={(e) => handleFomresponse(e, 'body')}\n                      id=\"exampleFormControlTextarea1\"\n                      rows=\"3\"\n                    ></CFormTextarea>\n                  </div>\n                </CForm>\n              </DocsExample>\n              <CButton onClick={setPrivacy} color=\"primary\" active=\"true\">\n                Update\n              </CButton>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Accordion\n"],"sourceRoot":""}